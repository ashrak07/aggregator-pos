// source: order.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.order.ApplyQuery', null, global);
goog.exportSymbol('proto.order.ApplyResponse', null, global);
goog.exportSymbol('proto.order.CheckQuery', null, global);
goog.exportSymbol('proto.order.CheckResponse', null, global);
goog.exportSymbol('proto.order.CreateRequest', null, global);
goog.exportSymbol('proto.order.CreateResponse', null, global);
goog.exportSymbol('proto.order.DeleteRequest', null, global);
goog.exportSymbol('proto.order.DeleteResponse', null, global);
goog.exportSymbol('proto.order.FindRequest', null, global);
goog.exportSymbol('proto.order.GetQuery', null, global);
goog.exportSymbol('proto.order.MaxUsage', null, global);
goog.exportSymbol('proto.order.MaxUsageResponse', null, global);
goog.exportSymbol('proto.order.OrderQuery', null, global);
goog.exportSymbol('proto.order.OrderResponse', null, global);
goog.exportSymbol('proto.order.Orders', null, global);
goog.exportSymbol('proto.order.PosInfos', null, global);
goog.exportSymbol('proto.order.PosResponse', null, global);
goog.exportSymbol('proto.order.Response', null, global);
goog.exportSymbol('proto.order.UpdateRequest', null, global);
goog.exportSymbol('proto.order.UpdateResponse', null, global);
goog.exportSymbol('proto.order.Website', null, global);
goog.exportSymbol('proto.order.WebsiteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.GetQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.GetQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.GetQuery.displayName = 'proto.order.GetQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.Response.displayName = 'proto.order.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.FindRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.FindRequest.repeatedFields_, null);
};
goog.inherits(proto.order.FindRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.FindRequest.displayName = 'proto.order.FindRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.CheckQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.CheckQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.CheckQuery.displayName = 'proto.order.CheckQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.MaxUsageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.MaxUsageResponse.repeatedFields_, null);
};
goog.inherits(proto.order.MaxUsageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.MaxUsageResponse.displayName = 'proto.order.MaxUsageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.WebsiteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.WebsiteResponse.repeatedFields_, null);
};
goog.inherits(proto.order.WebsiteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.WebsiteResponse.displayName = 'proto.order.WebsiteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.PosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.PosResponse.repeatedFields_, null);
};
goog.inherits(proto.order.PosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.PosResponse.displayName = 'proto.order.PosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.MaxUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.MaxUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.MaxUsage.displayName = 'proto.order.MaxUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.Website = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.Website, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.Website.displayName = 'proto.order.Website';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.PosInfos = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.PosInfos, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.PosInfos.displayName = 'proto.order.PosInfos';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.CheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.CheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.CheckResponse.displayName = 'proto.order.CheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.ApplyQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.ApplyQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.ApplyQuery.displayName = 'proto.order.ApplyQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.ApplyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.ApplyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.ApplyResponse.displayName = 'proto.order.ApplyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.OrderQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderQuery.displayName = 'proto.order.OrderQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.OrderResponse.repeatedFields_, null);
};
goog.inherits(proto.order.OrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderResponse.displayName = 'proto.order.OrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.Orders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.Orders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.Orders.displayName = 'proto.order.Orders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.DeleteRequest.displayName = 'proto.order.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.DeleteResponse.displayName = 'proto.order.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.CreateRequest.displayName = 'proto.order.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.CreateResponse.displayName = 'proto.order.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.UpdateRequest.displayName = 'proto.order.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.UpdateResponse.displayName = 'proto.order.UpdateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.GetQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.order.GetQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.GetQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.GetQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.GetQuery}
 */
proto.order.GetQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.GetQuery;
  return proto.order.GetQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.GetQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.GetQuery}
 */
proto.order.GetQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.GetQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.GetQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.GetQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.GetQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.GetQuery.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.GetQuery} returns this
 */
proto.order.GetQuery.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.order.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateOrder: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 10, 0),
    note: jspb.Message.getFieldWithDefault(msg, 11, ""),
    source: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 14, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    randomCodeOrder: jspb.Message.getFieldWithDefault(msg, 16, ""),
    eventName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    promoCodeId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 20, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 21, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 22, ""),
    address: jspb.Message.getFieldWithDefault(msg, 23, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 24, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 25, ""),
    zipCode: jspb.Message.getFieldWithDefault(msg, 26, 0),
    country: jspb.Message.getFieldWithDefault(msg, 27, ""),
    city: jspb.Message.getFieldWithDefault(msg, 28, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    shopId: jspb.Message.getFieldWithDefault(msg, 30, 0),
    currencyId: jspb.Message.getFieldWithDefault(msg, 31, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.Response}
 */
proto.order.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.Response;
  return proto.order.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.Response}
 */
proto.order.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRandomCodeOrder(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPromoCodeId(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZipCode(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRandomCodeOrder();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getPromoCodeId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getZipCode();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.Response.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.Response.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 partner_id = 3;
 * @return {number}
 */
proto.order.Response.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.order.Response.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date_order = 5;
 * @return {string}
 */
proto.order.Response.prototype.getDateOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setDateOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.order.Response.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.order.Response.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.order.Response.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.order.Response.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount_total = 10;
 * @return {number}
 */
proto.order.Response.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string note = 11;
 * @return {string}
 */
proto.order.Response.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string source = 12;
 * @return {string}
 */
proto.order.Response.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string buyer_name = 13;
 * @return {string}
 */
proto.order.Response.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string buyer_email = 14;
 * @return {string}
 */
proto.order.Response.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string buyer_phone = 15;
 * @return {string}
 */
proto.order.Response.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string random_code_order = 16;
 * @return {string}
 */
proto.order.Response.prototype.getRandomCodeOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setRandomCodeOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string event_name = 17;
 * @return {string}
 */
proto.order.Response.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setEventName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional int32 event_id = 18;
 * @return {number}
 */
proto.order.Response.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 promo_code_id = 19;
 * @return {number}
 */
proto.order.Response.prototype.getPromoCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setPromoCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 user_id = 20;
 * @return {number}
 */
proto.order.Response.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string user_name = 21;
 * @return {string}
 */
proto.order.Response.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string lastname = 22;
 * @return {string}
 */
proto.order.Response.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string address = 23;
 * @return {string}
 */
proto.order.Response.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string phone = 24;
 * @return {string}
 */
proto.order.Response.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string mobile = 25;
 * @return {string}
 */
proto.order.Response.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 zip_code = 26;
 * @return {number}
 */
proto.order.Response.prototype.getZipCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string country = 27;
 * @return {string}
 */
proto.order.Response.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string city = 28;
 * @return {string}
 */
proto.order.Response.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional double price_reduce = 29;
 * @return {number}
 */
proto.order.Response.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional int32 shop_id = 30;
 * @return {number}
 */
proto.order.Response.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int32 currency_id = 31;
 * @return {number}
 */
proto.order.Response.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Response} returns this
 */
proto.order.Response.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.FindRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.FindRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.order.FindRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.FindRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.FindRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nb: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fieldNameList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    fieldValueList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.FindRequest}
 */
proto.order.FindRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.FindRequest;
  return proto.order.FindRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.FindRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.FindRequest}
 */
proto.order.FindRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNb(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.FindRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.FindRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.FindRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.FindRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNb();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFieldNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFieldValueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional int32 nb = 1;
 * @return {number}
 */
proto.order.FindRequest.prototype.getNb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.setNb = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.order.FindRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string field_name = 3;
 * @return {!Array<string>}
 */
proto.order.FindRequest.prototype.getFieldNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.setFieldNameList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.addFieldName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.clearFieldNameList = function() {
  return this.setFieldNameList([]);
};


/**
 * repeated string field_value = 4;
 * @return {!Array<string>}
 */
proto.order.FindRequest.prototype.getFieldValueList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.setFieldValueList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.addFieldValue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.FindRequest} returns this
 */
proto.order.FindRequest.prototype.clearFieldValueList = function() {
  return this.setFieldValueList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.CheckQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.order.CheckQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.CheckQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CheckQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    idOrder: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.CheckQuery}
 */
proto.order.CheckQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.CheckQuery;
  return proto.order.CheckQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.CheckQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.CheckQuery}
 */
proto.order.CheckQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.CheckQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.CheckQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.CheckQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CheckQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdOrder();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.order.CheckQuery.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CheckQuery} returns this
 */
proto.order.CheckQuery.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id_order = 2;
 * @return {number}
 */
proto.order.CheckQuery.prototype.getIdOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CheckQuery} returns this
 */
proto.order.CheckQuery.prototype.setIdOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.MaxUsageResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.MaxUsageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.MaxUsageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.MaxUsageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.MaxUsageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxusageList: jspb.Message.toObjectList(msg.getMaxusageList(),
    proto.order.MaxUsage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.MaxUsageResponse}
 */
proto.order.MaxUsageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.MaxUsageResponse;
  return proto.order.MaxUsageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.MaxUsageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.MaxUsageResponse}
 */
proto.order.MaxUsageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.MaxUsage;
      reader.readMessage(value,proto.order.MaxUsage.deserializeBinaryFromReader);
      msg.addMaxusage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.MaxUsageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.MaxUsageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.MaxUsageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.MaxUsageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxusageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.MaxUsage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MaxUsage MaxUsage = 1;
 * @return {!Array<!proto.order.MaxUsage>}
 */
proto.order.MaxUsageResponse.prototype.getMaxusageList = function() {
  return /** @type{!Array<!proto.order.MaxUsage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.MaxUsage, 1));
};


/**
 * @param {!Array<!proto.order.MaxUsage>} value
 * @return {!proto.order.MaxUsageResponse} returns this
*/
proto.order.MaxUsageResponse.prototype.setMaxusageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.MaxUsage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.MaxUsage}
 */
proto.order.MaxUsageResponse.prototype.addMaxusage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.MaxUsage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.MaxUsageResponse} returns this
 */
proto.order.MaxUsageResponse.prototype.clearMaxusageList = function() {
  return this.setMaxusageList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.WebsiteResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.WebsiteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.WebsiteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.WebsiteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.WebsiteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    websiteList: jspb.Message.toObjectList(msg.getWebsiteList(),
    proto.order.Website.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.WebsiteResponse}
 */
proto.order.WebsiteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.WebsiteResponse;
  return proto.order.WebsiteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.WebsiteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.WebsiteResponse}
 */
proto.order.WebsiteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.Website;
      reader.readMessage(value,proto.order.Website.deserializeBinaryFromReader);
      msg.addWebsite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.WebsiteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.WebsiteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.WebsiteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.WebsiteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebsiteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.Website.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Website Website = 1;
 * @return {!Array<!proto.order.Website>}
 */
proto.order.WebsiteResponse.prototype.getWebsiteList = function() {
  return /** @type{!Array<!proto.order.Website>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.Website, 1));
};


/**
 * @param {!Array<!proto.order.Website>} value
 * @return {!proto.order.WebsiteResponse} returns this
*/
proto.order.WebsiteResponse.prototype.setWebsiteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.Website=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.Website}
 */
proto.order.WebsiteResponse.prototype.addWebsite = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.Website, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.WebsiteResponse} returns this
 */
proto.order.WebsiteResponse.prototype.clearWebsiteList = function() {
  return this.setWebsiteList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.PosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.PosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.PosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.PosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.PosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    posinfosList: jspb.Message.toObjectList(msg.getPosinfosList(),
    proto.order.PosInfos.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.PosResponse}
 */
proto.order.PosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.PosResponse;
  return proto.order.PosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.PosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.PosResponse}
 */
proto.order.PosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.PosInfos;
      reader.readMessage(value,proto.order.PosInfos.deserializeBinaryFromReader);
      msg.addPosinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.PosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.PosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.PosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.PosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.PosInfos.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PosInfos PosInfos = 1;
 * @return {!Array<!proto.order.PosInfos>}
 */
proto.order.PosResponse.prototype.getPosinfosList = function() {
  return /** @type{!Array<!proto.order.PosInfos>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.PosInfos, 1));
};


/**
 * @param {!Array<!proto.order.PosInfos>} value
 * @return {!proto.order.PosResponse} returns this
*/
proto.order.PosResponse.prototype.setPosinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.PosInfos=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.PosInfos}
 */
proto.order.PosResponse.prototype.addPosinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.PosInfos, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.PosResponse} returns this
 */
proto.order.PosResponse.prototype.clearPosinfosList = function() {
  return this.setPosinfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.MaxUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.order.MaxUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.MaxUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.MaxUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    codePromo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxUsage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    promoCodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rest: jspb.Message.getFieldWithDefault(msg, 5, 0),
    orderId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    montantEspere: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    montantEncaisse: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    eventId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    shopName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    shopId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    source: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.MaxUsage}
 */
proto.order.MaxUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.MaxUsage;
  return proto.order.MaxUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.MaxUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.MaxUsage}
 */
proto.order.MaxUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodePromo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxUsage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPromoCodeId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRest(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEspere(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEncaisse(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopName(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.MaxUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.MaxUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.MaxUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.MaxUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodePromo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxUsage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPromoCodeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRest();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMontantEspere();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMontantEncaisse();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getShopName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string code_promo_ = 1;
 * @return {string}
 */
proto.order.MaxUsage.prototype.getCodePromo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setCodePromo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 max_usage = 2;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getMaxUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setMaxUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 promo_code_id = 4;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getPromoCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setPromoCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 rest = 5;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getRest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setRest = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 order_id = 6;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double montant_espere = 8;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getMontantEspere = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setMontantEspere = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double montant_encaisse = 9;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getMontantEncaisse = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setMontantEncaisse = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 event_id = 10;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string shop_name = 11;
 * @return {string}
 */
proto.order.MaxUsage.prototype.getShopName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setShopName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 shop_id = 12;
 * @return {number}
 */
proto.order.MaxUsage.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string source = 13;
 * @return {string}
 */
proto.order.MaxUsage.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.MaxUsage} returns this
 */
proto.order.MaxUsage.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.Website.prototype.toObject = function(opt_includeInstance) {
  return proto.order.Website.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.Website} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Website.toObject = function(includeInstance, msg) {
  var f, obj = {
    codePromo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxUsage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    promoCodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rest: jspb.Message.getFieldWithDefault(msg, 5, 0),
    orderId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    montantEspere: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    montantEncaisse: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    eventId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    source: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.Website}
 */
proto.order.Website.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.Website;
  return proto.order.Website.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.Website} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.Website}
 */
proto.order.Website.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodePromo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxUsage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPromoCodeId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRest(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEspere(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEncaisse(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.Website.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.Website.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.Website} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Website.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodePromo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxUsage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPromoCodeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRest();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMontantEspere();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMontantEncaisse();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string code_promo_ = 1;
 * @return {string}
 */
proto.order.Website.prototype.getCodePromo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setCodePromo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 max_usage = 2;
 * @return {number}
 */
proto.order.Website.prototype.getMaxUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setMaxUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.order.Website.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 promo_code_id = 4;
 * @return {number}
 */
proto.order.Website.prototype.getPromoCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setPromoCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 rest = 5;
 * @return {number}
 */
proto.order.Website.prototype.getRest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setRest = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 order_id = 6;
 * @return {number}
 */
proto.order.Website.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double montant_espere = 8;
 * @return {number}
 */
proto.order.Website.prototype.getMontantEspere = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setMontantEspere = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double montant_encaisse = 9;
 * @return {number}
 */
proto.order.Website.prototype.getMontantEncaisse = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setMontantEncaisse = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 event_id = 10;
 * @return {number}
 */
proto.order.Website.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string source = 11;
 * @return {string}
 */
proto.order.Website.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Website} returns this
 */
proto.order.Website.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.PosInfos.prototype.toObject = function(opt_includeInstance) {
  return proto.order.PosInfos.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.PosInfos} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.PosInfos.toObject = function(includeInstance, msg) {
  var f, obj = {
    codePromo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxUsage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    promoCodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rest: jspb.Message.getFieldWithDefault(msg, 5, 0),
    orderId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    montantEspere: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    montantEncaisse: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    eventId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    shopName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    shopId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    source: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.PosInfos}
 */
proto.order.PosInfos.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.PosInfos;
  return proto.order.PosInfos.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.PosInfos} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.PosInfos}
 */
proto.order.PosInfos.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodePromo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxUsage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPromoCodeId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRest(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEspere(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMontantEncaisse(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopName(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.PosInfos.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.PosInfos.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.PosInfos} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.PosInfos.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodePromo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxUsage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPromoCodeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRest();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMontantEspere();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMontantEncaisse();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getShopName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string code_promo_ = 1;
 * @return {string}
 */
proto.order.PosInfos.prototype.getCodePromo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setCodePromo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 max_usage = 2;
 * @return {number}
 */
proto.order.PosInfos.prototype.getMaxUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setMaxUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.order.PosInfos.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 promo_code_id = 4;
 * @return {number}
 */
proto.order.PosInfos.prototype.getPromoCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setPromoCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 rest = 5;
 * @return {number}
 */
proto.order.PosInfos.prototype.getRest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setRest = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 order_id = 6;
 * @return {number}
 */
proto.order.PosInfos.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double montant_espere = 8;
 * @return {number}
 */
proto.order.PosInfos.prototype.getMontantEspere = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setMontantEspere = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double montant_encaisse = 9;
 * @return {number}
 */
proto.order.PosInfos.prototype.getMontantEncaisse = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setMontantEncaisse = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 event_id = 10;
 * @return {number}
 */
proto.order.PosInfos.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string shop_name = 11;
 * @return {string}
 */
proto.order.PosInfos.prototype.getShopName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setShopName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 shop_id = 12;
 * @return {number}
 */
proto.order.PosInfos.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string source = 13;
 * @return {string}
 */
proto.order.PosInfos.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.PosInfos} returns this
 */
proto.order.PosInfos.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.CheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.CheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.CheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    idPromocode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alertMessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.CheckResponse}
 */
proto.order.CheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.CheckResponse;
  return proto.order.CheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.CheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.CheckResponse}
 */
proto.order.CheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdPromocode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlertMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.CheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.CheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.CheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIdPromocode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAlertMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.order.CheckResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.order.CheckResponse} returns this
 */
proto.order.CheckResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 id_promocode = 2;
 * @return {number}
 */
proto.order.CheckResponse.prototype.getIdPromocode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CheckResponse} returns this
 */
proto.order.CheckResponse.prototype.setIdPromocode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string alert_message = 3;
 * @return {string}
 */
proto.order.CheckResponse.prototype.getAlertMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CheckResponse} returns this
 */
proto.order.CheckResponse.prototype.setAlertMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.ApplyQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.order.ApplyQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.ApplyQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.ApplyQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    idOrder: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.ApplyQuery}
 */
proto.order.ApplyQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.ApplyQuery;
  return proto.order.ApplyQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.ApplyQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.ApplyQuery}
 */
proto.order.ApplyQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.ApplyQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.ApplyQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.ApplyQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.ApplyQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdOrder();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id_order = 1;
 * @return {number}
 */
proto.order.ApplyQuery.prototype.getIdOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.ApplyQuery} returns this
 */
proto.order.ApplyQuery.prototype.setIdOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.ApplyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.ApplyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.ApplyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.ApplyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    idPromocode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.ApplyResponse}
 */
proto.order.ApplyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.ApplyResponse;
  return proto.order.ApplyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.ApplyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.ApplyResponse}
 */
proto.order.ApplyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdPromocode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.ApplyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.ApplyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.ApplyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.ApplyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIdPromocode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.order.ApplyResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.order.ApplyResponse} returns this
 */
proto.order.ApplyResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 id_promocode = 2;
 * @return {number}
 */
proto.order.ApplyResponse.prototype.getIdPromocode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.ApplyResponse} returns this
 */
proto.order.ApplyResponse.prototype.setIdPromocode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nb: jspb.Message.getFieldWithDefault(msg, 3, 0),
    source: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderQuery}
 */
proto.order.OrderQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderQuery;
  return proto.order.OrderQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderQuery}
 */
proto.order.OrderQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNb(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNb();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 event_id = 1;
 * @return {number}
 */
proto.order.OrderQuery.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderQuery} returns this
 */
proto.order.OrderQuery.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.order.OrderQuery.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderQuery} returns this
 */
proto.order.OrderQuery.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 nb = 3;
 * @return {number}
 */
proto.order.OrderQuery.prototype.getNb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderQuery} returns this
 */
proto.order.OrderQuery.prototype.setNb = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string source = 4;
 * @return {string}
 */
proto.order.OrderQuery.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderQuery} returns this
 */
proto.order.OrderQuery.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.OrderResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderList: jspb.Message.toObjectList(msg.getOrderList(),
    proto.order.Orders.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderResponse}
 */
proto.order.OrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderResponse;
  return proto.order.OrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderResponse}
 */
proto.order.OrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.Orders;
      reader.readMessage(value,proto.order.Orders.deserializeBinaryFromReader);
      msg.addOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.Orders.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Orders Order = 1;
 * @return {!Array<!proto.order.Orders>}
 */
proto.order.OrderResponse.prototype.getOrderList = function() {
  return /** @type{!Array<!proto.order.Orders>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.Orders, 1));
};


/**
 * @param {!Array<!proto.order.Orders>} value
 * @return {!proto.order.OrderResponse} returns this
*/
proto.order.OrderResponse.prototype.setOrderList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.Orders=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.Orders}
 */
proto.order.OrderResponse.prototype.addOrder = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.Orders, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderResponse} returns this
 */
proto.order.OrderResponse.prototype.clearOrderList = function() {
  return this.setOrderList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.Orders.prototype.toObject = function(opt_includeInstance) {
  return proto.order.Orders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.Orders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Orders.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateOrder: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 10, 0),
    note: jspb.Message.getFieldWithDefault(msg, 11, ""),
    source: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 14, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    randomCodeOrder: jspb.Message.getFieldWithDefault(msg, 16, ""),
    eventName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    promoCodeId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 20, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 21, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 22, ""),
    address: jspb.Message.getFieldWithDefault(msg, 23, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 24, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 25, ""),
    zipCode: jspb.Message.getFieldWithDefault(msg, 26, 0),
    country: jspb.Message.getFieldWithDefault(msg, 27, ""),
    city: jspb.Message.getFieldWithDefault(msg, 28, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    shopId: jspb.Message.getFieldWithDefault(msg, 30, 0),
    currencyId: jspb.Message.getFieldWithDefault(msg, 31, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.Orders}
 */
proto.order.Orders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.Orders;
  return proto.order.Orders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.Orders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.Orders}
 */
proto.order.Orders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRandomCodeOrder(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPromoCodeId(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZipCode(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.Orders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.Orders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.Orders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.Orders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRandomCodeOrder();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getPromoCodeId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getZipCode();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.Orders.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.Orders.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 partner_id = 3;
 * @return {number}
 */
proto.order.Orders.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.order.Orders.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date_order = 5;
 * @return {string}
 */
proto.order.Orders.prototype.getDateOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setDateOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.order.Orders.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.order.Orders.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.order.Orders.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.order.Orders.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount_total = 10;
 * @return {number}
 */
proto.order.Orders.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string note = 11;
 * @return {string}
 */
proto.order.Orders.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string source = 12;
 * @return {string}
 */
proto.order.Orders.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string buyer_name = 13;
 * @return {string}
 */
proto.order.Orders.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string buyer_email = 14;
 * @return {string}
 */
proto.order.Orders.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string buyer_phone = 15;
 * @return {string}
 */
proto.order.Orders.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string random_code_order = 16;
 * @return {string}
 */
proto.order.Orders.prototype.getRandomCodeOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setRandomCodeOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string event_name = 17;
 * @return {string}
 */
proto.order.Orders.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setEventName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional int32 event_id = 18;
 * @return {number}
 */
proto.order.Orders.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 promo_code_id = 19;
 * @return {number}
 */
proto.order.Orders.prototype.getPromoCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setPromoCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 user_id = 20;
 * @return {number}
 */
proto.order.Orders.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string user_name = 21;
 * @return {string}
 */
proto.order.Orders.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string lastname = 22;
 * @return {string}
 */
proto.order.Orders.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string address = 23;
 * @return {string}
 */
proto.order.Orders.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string phone = 24;
 * @return {string}
 */
proto.order.Orders.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string mobile = 25;
 * @return {string}
 */
proto.order.Orders.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 zip_code = 26;
 * @return {number}
 */
proto.order.Orders.prototype.getZipCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string country = 27;
 * @return {string}
 */
proto.order.Orders.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string city = 28;
 * @return {string}
 */
proto.order.Orders.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional double price_reduce = 29;
 * @return {number}
 */
proto.order.Orders.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional int32 shop_id = 30;
 * @return {number}
 */
proto.order.Orders.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int32 currency_id = 31;
 * @return {number}
 */
proto.order.Orders.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.Orders} returns this
 */
proto.order.Orders.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.order.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.DeleteRequest}
 */
proto.order.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.DeleteRequest;
  return proto.order.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.DeleteRequest}
 */
proto.order.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.DeleteRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.DeleteRequest} returns this
 */
proto.order.DeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.DeleteResponse}
 */
proto.order.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.DeleteResponse;
  return proto.order.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.DeleteResponse}
 */
proto.order.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.DeleteResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.DeleteResponse} returns this
 */
proto.order.DeleteResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.order.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    partnerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 9, 0),
    note: jspb.Message.getFieldWithDefault(msg, 10, ""),
    source: jspb.Message.getFieldWithDefault(msg, 11, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    currencyId: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.CreateRequest}
 */
proto.order.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.CreateRequest;
  return proto.order.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.CreateRequest}
 */
proto.order.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int32 shop_id = 1;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 partner_id = 2;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string buyer_name = 4;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string buyer_email = 5;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string buyer_phone = 6;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 create_uid = 7;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 write_uid = 8;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 amount_total = 9;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string note = 10;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string source = 11;
 * @return {string}
 */
proto.order.CreateRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional double price_reduce = 12;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 currency_id = 13;
 * @return {number}
 */
proto.order.CreateRequest.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateRequest} returns this
 */
proto.order.CreateRequest.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateOrder: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 10, 0),
    note: jspb.Message.getFieldWithDefault(msg, 11, ""),
    source: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 14, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    randomCodeOrder: jspb.Message.getFieldWithDefault(msg, 16, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    shopId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    currencyId: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.CreateResponse}
 */
proto.order.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.CreateResponse;
  return proto.order.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.CreateResponse}
 */
proto.order.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRandomCodeOrder(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRandomCodeOrder();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 partner_id = 3;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date_order = 5;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getDateOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setDateOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount_total = 10;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string note = 11;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string source = 12;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string buyer_name = 13;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string buyer_email = 14;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string buyer_phone = 15;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string random_code_order = 16;
 * @return {string}
 */
proto.order.CreateResponse.prototype.getRandomCodeOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setRandomCodeOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional double price_reduce = 17;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional int32 shop_id = 18;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 currency_id = 19;
 * @return {number}
 */
proto.order.CreateResponse.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.CreateResponse} returns this
 */
proto.order.CreateResponse.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.order.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 7, ""),
    shopId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 10, 0),
    note: jspb.Message.getFieldWithDefault(msg, 11, ""),
    source: jspb.Message.getFieldWithDefault(msg, 12, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    id: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.UpdateRequest}
 */
proto.order.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.UpdateRequest;
  return proto.order.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.UpdateRequest}
 */
proto.order.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional int32 currency_id = 1;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 partner_id = 3;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string buyer_name = 5;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string buyer_email = 6;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string buyer_phone = 7;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 shop_id = 8;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount_total = 10;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string note = 11;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string source = 12;
 * @return {string}
 */
proto.order.UpdateRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional double price_reduce = 13;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int32 id = 14;
 * @return {number}
 */
proto.order.UpdateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateRequest} returns this
 */
proto.order.UpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.order.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateOrder: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountTotal: jspb.Message.getFieldWithDefault(msg, 10, 0),
    note: jspb.Message.getFieldWithDefault(msg, 11, ""),
    source: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 14, ""),
    buyerPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    randomCodeOrder: jspb.Message.getFieldWithDefault(msg, 16, ""),
    priceReduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    shopId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    currencyId: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.UpdateResponse}
 */
proto.order.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.UpdateResponse;
  return proto.order.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.UpdateResponse}
 */
proto.order.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountTotal(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRandomCodeOrder(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceReduce(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmountTotal();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBuyerPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRandomCodeOrder();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getShopId();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getCurrencyId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 partner_id = 3;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date_order = 5;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getDateOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setDateOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount_total = 10;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getAmountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setAmountTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string note = 11;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string source = 12;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string buyer_name = 13;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string buyer_email = 14;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string buyer_phone = 15;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getBuyerPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setBuyerPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string random_code_order = 16;
 * @return {string}
 */
proto.order.UpdateResponse.prototype.getRandomCodeOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setRandomCodeOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional double price_reduce = 17;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional int32 shop_id = 18;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getShopId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setShopId = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 currency_id = 19;
 * @return {number}
 */
proto.order.UpdateResponse.prototype.getCurrencyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.UpdateResponse} returns this
 */
proto.order.UpdateResponse.prototype.setCurrencyId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


goog.object.extend(exports, proto.order);
