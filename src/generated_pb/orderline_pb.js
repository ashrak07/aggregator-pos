// source: orderline.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.orderline.CreateRequest', null, global);
goog.exportSymbol('proto.orderline.CreateResponse', null, global);
goog.exportSymbol('proto.orderline.DeleteRequest', null, global);
goog.exportSymbol('proto.orderline.DeleteResponse', null, global);
goog.exportSymbol('proto.orderline.OrderlineQuery', null, global);
goog.exportSymbol('proto.orderline.OrderlineResponse', null, global);
goog.exportSymbol('proto.orderline.Orderlines', null, global);
goog.exportSymbol('proto.orderline.UpdateRequest', null, global);
goog.exportSymbol('proto.orderline.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.OrderlineQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.OrderlineQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.OrderlineQuery.displayName = 'proto.orderline.OrderlineQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.OrderlineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.orderline.OrderlineResponse.repeatedFields_, null);
};
goog.inherits(proto.orderline.OrderlineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.OrderlineResponse.displayName = 'proto.orderline.OrderlineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.Orderlines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.Orderlines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.Orderlines.displayName = 'proto.orderline.Orderlines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.DeleteRequest.displayName = 'proto.orderline.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.DeleteResponse.displayName = 'proto.orderline.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.CreateRequest.displayName = 'proto.orderline.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.CreateResponse.displayName = 'proto.orderline.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.UpdateRequest.displayName = 'proto.orderline.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderline.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderline.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderline.UpdateResponse.displayName = 'proto.orderline.UpdateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.OrderlineQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.OrderlineQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.OrderlineQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.OrderlineQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.OrderlineQuery}
 */
proto.orderline.OrderlineQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.OrderlineQuery;
  return proto.orderline.OrderlineQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.OrderlineQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.OrderlineQuery}
 */
proto.orderline.OrderlineQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.OrderlineQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.OrderlineQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.OrderlineQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.OrderlineQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.OrderlineQuery.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.OrderlineQuery} returns this
 */
proto.orderline.OrderlineQuery.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.orderline.OrderlineResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.OrderlineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.OrderlineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.OrderlineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.OrderlineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderlineList: jspb.Message.toObjectList(msg.getOrderlineList(),
    proto.orderline.Orderlines.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.OrderlineResponse}
 */
proto.orderline.OrderlineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.OrderlineResponse;
  return proto.orderline.OrderlineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.OrderlineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.OrderlineResponse}
 */
proto.orderline.OrderlineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.orderline.Orderlines;
      reader.readMessage(value,proto.orderline.Orderlines.deserializeBinaryFromReader);
      msg.addOrderline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.OrderlineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.OrderlineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.OrderlineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.OrderlineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderlineList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.orderline.Orderlines.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Orderlines Orderline = 1;
 * @return {!Array<!proto.orderline.Orderlines>}
 */
proto.orderline.OrderlineResponse.prototype.getOrderlineList = function() {
  return /** @type{!Array<!proto.orderline.Orderlines>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.orderline.Orderlines, 1));
};


/**
 * @param {!Array<!proto.orderline.Orderlines>} value
 * @return {!proto.orderline.OrderlineResponse} returns this
*/
proto.orderline.OrderlineResponse.prototype.setOrderlineList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.orderline.Orderlines=} opt_value
 * @param {number=} opt_index
 * @return {!proto.orderline.Orderlines}
 */
proto.orderline.OrderlineResponse.prototype.addOrderline = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.orderline.Orderlines, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.orderline.OrderlineResponse} returns this
 */
proto.orderline.OrderlineResponse.prototype.clearOrderlineList = function() {
  return this.setOrderlineList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.Orderlines.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.Orderlines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.Orderlines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.Orderlines.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    place: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketTypeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    qty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    priceUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priceReduce: jspb.Message.getFieldWithDefault(msg, 13, 0),
    priceSubTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    section: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.Orderlines}
 */
proto.orderline.Orderlines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.Orderlines;
  return proto.orderline.Orderlines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.Orderlines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.Orderlines}
 */
proto.orderline.Orderlines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketTypeId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQty(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceSubTotal(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.Orderlines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.Orderlines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.Orderlines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.Orderlines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsAdmission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketTypeId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQty();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPriceUnit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPriceSubTotal();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string place = 2;
 * @return {string}
 */
proto.orderline.Orderlines.prototype.getPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setPlace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order_id = 3;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 event_id = 4;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admission = 5;
 * @return {boolean}
 */
proto.orderline.Orderlines.prototype.getIsAdmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setIsAdmission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.orderline.Orderlines.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.orderline.Orderlines.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ticket_type_id = 10;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getTicketTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setTicketTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 qty = 11;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getQty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setQty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 price_unit = 12;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getPriceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setPriceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 price_reduce = 13;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 price_sub_total = 14;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getPriceSubTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setPriceSubTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 discount = 15;
 * @return {number}
 */
proto.orderline.Orderlines.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string section = 16;
 * @return {string}
 */
proto.orderline.Orderlines.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.Orderlines} returns this
 */
proto.orderline.Orderlines.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.DeleteRequest}
 */
proto.orderline.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.DeleteRequest;
  return proto.orderline.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.DeleteRequest}
 */
proto.orderline.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.DeleteRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.DeleteRequest} returns this
 */
proto.orderline.DeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.DeleteResponse}
 */
proto.orderline.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.DeleteResponse;
  return proto.orderline.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.DeleteResponse}
 */
proto.orderline.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.DeleteResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.DeleteResponse} returns this
 */
proto.orderline.DeleteResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    place: jspb.Message.getFieldWithDefault(msg, 1, ""),
    section: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketTypeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    qty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    priceUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priceReduce: jspb.Message.getFieldWithDefault(msg, 13, 0),
    priceSubTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.CreateRequest}
 */
proto.orderline.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.CreateRequest;
  return proto.orderline.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.CreateRequest}
 */
proto.orderline.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketTypeId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQty(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceSubTotal(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsAdmission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketTypeId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQty();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPriceUnit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPriceSubTotal();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional string place = 1;
 * @return {string}
 */
proto.orderline.CreateRequest.prototype.getPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setPlace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string section = 2;
 * @return {string}
 */
proto.orderline.CreateRequest.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order_id = 3;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 event_id = 4;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admission = 5;
 * @return {boolean}
 */
proto.orderline.CreateRequest.prototype.getIsAdmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setIsAdmission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.orderline.CreateRequest.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.orderline.CreateRequest.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ticket_type_id = 10;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getTicketTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setTicketTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 qty = 11;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getQty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setQty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 price_unit = 12;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getPriceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setPriceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 price_reduce = 13;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 price_sub_total = 14;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getPriceSubTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setPriceSubTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 discount = 15;
 * @return {number}
 */
proto.orderline.CreateRequest.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateRequest} returns this
 */
proto.orderline.CreateRequest.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    place: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketTypeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    qty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    priceUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priceReduce: jspb.Message.getFieldWithDefault(msg, 13, 0),
    priceSubTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    section: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.CreateResponse}
 */
proto.orderline.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.CreateResponse;
  return proto.orderline.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.CreateResponse}
 */
proto.orderline.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketTypeId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQty(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceSubTotal(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsAdmission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketTypeId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQty();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPriceUnit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPriceSubTotal();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string place = 2;
 * @return {string}
 */
proto.orderline.CreateResponse.prototype.getPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setPlace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order_id = 3;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 event_id = 4;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admission = 5;
 * @return {boolean}
 */
proto.orderline.CreateResponse.prototype.getIsAdmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setIsAdmission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.orderline.CreateResponse.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.orderline.CreateResponse.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ticket_type_id = 10;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getTicketTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setTicketTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 qty = 11;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getQty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setQty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 price_unit = 12;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getPriceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setPriceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 price_reduce = 13;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 price_sub_total = 14;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getPriceSubTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setPriceSubTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 discount = 15;
 * @return {number}
 */
proto.orderline.CreateResponse.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string section = 16;
 * @return {string}
 */
proto.orderline.CreateResponse.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.CreateResponse} returns this
 */
proto.orderline.CreateResponse.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    place: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketTypeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    qty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    priceUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priceReduce: jspb.Message.getFieldWithDefault(msg, 13, 0),
    priceSubTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    section: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.UpdateRequest}
 */
proto.orderline.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.UpdateRequest;
  return proto.orderline.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.UpdateRequest}
 */
proto.orderline.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketTypeId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQty(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceSubTotal(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsAdmission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketTypeId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQty();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPriceUnit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPriceSubTotal();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string place = 2;
 * @return {string}
 */
proto.orderline.UpdateRequest.prototype.getPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setPlace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order_id = 3;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 event_id = 4;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admission = 5;
 * @return {boolean}
 */
proto.orderline.UpdateRequest.prototype.getIsAdmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setIsAdmission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.orderline.UpdateRequest.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.orderline.UpdateRequest.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ticket_type_id = 10;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getTicketTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setTicketTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 qty = 11;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getQty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setQty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 price_unit = 12;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getPriceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setPriceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 price_reduce = 13;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 price_sub_total = 14;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getPriceSubTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setPriceSubTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 discount = 15;
 * @return {number}
 */
proto.orderline.UpdateRequest.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string section = 16;
 * @return {string}
 */
proto.orderline.UpdateRequest.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateRequest} returns this
 */
proto.orderline.UpdateRequest.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderline.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.orderline.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderline.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    place: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    writeDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createUid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    writeUid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketTypeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    qty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    priceUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priceReduce: jspb.Message.getFieldWithDefault(msg, 13, 0),
    priceSubTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    section: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderline.UpdateResponse}
 */
proto.orderline.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderline.UpdateResponse;
  return proto.orderline.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderline.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderline.UpdateResponse}
 */
proto.orderline.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreateUid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWriteUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketTypeId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQty(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceReduce(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceSubTotal(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderline.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderline.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderline.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderline.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsAdmission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWriteDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateUid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWriteUid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketTypeId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQty();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPriceUnit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriceReduce();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPriceSubTotal();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string place = 2;
 * @return {string}
 */
proto.orderline.UpdateResponse.prototype.getPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setPlace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order_id = 3;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 event_id = 4;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admission = 5;
 * @return {boolean}
 */
proto.orderline.UpdateResponse.prototype.getIsAdmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setIsAdmission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string create_date = 6;
 * @return {string}
 */
proto.orderline.UpdateResponse.prototype.getCreateDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setCreateDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string write_date = 7;
 * @return {string}
 */
proto.orderline.UpdateResponse.prototype.getWriteDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setWriteDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 create_uid = 8;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getCreateUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setCreateUid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 write_uid = 9;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getWriteUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setWriteUid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ticket_type_id = 10;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getTicketTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setTicketTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 qty = 11;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getQty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setQty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 price_unit = 12;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getPriceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setPriceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 price_reduce = 13;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getPriceReduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setPriceReduce = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 price_sub_total = 14;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getPriceSubTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setPriceSubTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 discount = 15;
 * @return {number}
 */
proto.orderline.UpdateResponse.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string section = 16;
 * @return {string}
 */
proto.orderline.UpdateResponse.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderline.UpdateResponse} returns this
 */
proto.orderline.UpdateResponse.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


goog.object.extend(exports, proto.orderline);
